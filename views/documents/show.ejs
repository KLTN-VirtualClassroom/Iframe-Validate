<!-- <script src="http://localhost:5000/pspdfkit.js"></script> -->
<script src="http://115.78.232.219:5012//pspdfkit.js"></script>

<!-- 2. Element where PSPDFKit will be mounted. -->
<div id="pspdfkit" style="width: 100%; height: 100%"></div>

<script type='text/javascript' src='http://localhost:3030/socket.io/socket.io.js'></script>

<!-- 3. Initialize PSPDFKit. -->
<script>
  // const { List } = PSPDFKit.Immutable;
  // const { DrawingPoint, Rect } = PSPDFKit.Geometry;
  // const { InkAnnotation } = PSPDFKit.Annotations;
  // const { Point } = PSPDFKit.Geometry;

  PSPDFKit.load({
    container: "#pspdfkit",
    documentId: "<%= documentId %>",
    authPayload: { jwt: "<%= jwt %>" },
    autoSaveMode: PSPDFKit.AutoSaveMode.IMMEDIATE,
    instant: true,
  })
    .then(async function (instance) {
      // const annotations = await instance.getAnnotations(0);
      // const MediaAnnotations = annotations.filter(
      //   (annotation) =>
      //     annotation instanceof PSPDFKit.Annotations.MediaAnnotation
      // );

      const socket = new io("http://localhost:3030");

      const scrollKit =
        instance.contentDocument.querySelector(".PSPDFKit-Scroll");
      const ratioY = scrollKit.scrollTop / scrollKit.scrollHeight;
      const ratioX = scrollKit.scrollLeft / scrollKit.scrollWidth;

     
      scrollKit.addEventListener("scroll", function () {
        //console.log(scrollKit.scrollTop+ " "+ scrollKit.scrollLeft);
        socket.emit("scrolling-pdf",{
          ratioX: scrollKit.scrollTop,
          ratioY: scrollKit.scrollLeft
        })
      });

      socket.on("sync-scrolling-pdf", (e) =>{
        scrollKit.scrollTop = e.ratioX,
        scrollKit.scrollLeft = e.ratioY
      })

      socket.on("sync-scrolling-pdf-first-access", (e) =>{
        scrollKit.scrollTop = e.ratioX,
        scrollKit.scrollLeft = e.ratioY
      })

      instance.addEventListener(
        "instant.connectedClients.change",
        (clients) => {
          console.log(clients.toJS());
        }
      );

      const handleZoomEvent = (e) => {
        socket.emit("pdf-zoom",{
          value: e
        })
      };

      instance.addEventListener('viewState.zoom.change', handleZoomEvent);

      socket.on("change-pdf-zoom", (e)=>{
        instance.setViewState(viewState => viewState.set("zoom", e.value))
      })

      socket.on("pdf-current-zoom", (e)=>{
        instance.setViewState(viewState => viewState.set("zoom", e.value))
      })


      console.log("Successfully mounted PSPDFKit", instance);

      console.log("cCreated");
    })
    .catch(function (error) {
      console.error(error.message);
    });
</script>

<script>
  // const scrollDemo = document.querySelector("#pspdfkit");
  // //console.log(scrollDemo.firstChild.firstChild)
  // const child = scrollDemo.firstChild.firstChild;
  // const child_doc = child.contentDocument;
  // console.log(child.contentDocument);
  // child_doc.addEventListener("scroll", function (event) {
  //   console.log(event);
  // });
  // child_doc.onscroll = () => {
  //   console.log("ROLLEE");
  // };
</script>
